---
title: "Workflow Examples"
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "vignettes/articles/figures/workflow-")

creek_sf <- sf::st_read(here::here("misc/data/Clinton_Creek.shp"))
mill_sf <- sf::st_read(here::here("misc/data/MillBayWatershed.shp"))

```

This article presents a couple examples of general workflows in R alone
(without using the app), running through the various steps using the functions directly.

This gives you a bit more flexibility in how you explore and/or filter your
data.

Let's work through a couple of examples (note these examples are presented for illustration, but 
the shape files are not included in the package).

```{r, message = FALSE}
library(bcaquiferdata)
library(sf)
library(ggplot2)
library(ggspatial)
```

**Clinton Creek**

Load a shape file defining the region of interest
```{r}
#| eval: false
creek_sf <- st_read("misc/data/Clinton_Creek.shp")
```

Fetch Lidar DEM (this may take a while the first time)

```{r}
creek_lidar <- dem_region(creek_sf)
```

Plot to double check
```{r}
plot(creek_lidar)
```

Collect wells in this region with added elevation from Lidar

```{r}
creek_wells <- creek_sf |>
  wells_subset() |>        # Subset to region
  wells_elev(creek_lidar)  # Add Lidar
```

Plot again to double check
```{r}
ggplot() +
  geom_sf(data = creek_sf) +
  geom_sf(data = creek_wells, size= 1, aes(colour = elev))
```

Export data for Strater, Voxler, and ArcHydro
```{r}
wells_export(creek_wells, id = "clinton", type = "strater")
wells_export(creek_wells, id = "clinton", type = "voxler")
wells_export(creek_wells, id = "clinton", type = "archydro")
```

**Mill Bay Watershed**

Load a shape file defining the region of interest
```{r}
#| eval: false
mill_sf <- st_read("misc/data/MillBayWatershed.shp")
```

We'll check against some tiles
```{r, cache = TRUE, message = FALSE}
g <- ggplot() +
  annotation_map_tile(type = "osm", zoomin = -1) +
  geom_sf(data = mill_sf, fill = NA, linewidth = 1.5) +
  labs(caption = "Data from OpenStreet Map")
g
```

Fetch Lidar DEM (this may take a while the first time)

```{r}
mill_lidar <- dem_region(mill_sf)
```

Add to our plot to double check
```{r}
mill_lidar_sf <- stars::st_downsample(mill_lidar, n = 12) |> # Downsample first
  st_as_sf(as_points = FALSE, merge = TRUE)         # Convert to polygons

g + geom_sf(data = mill_lidar_sf, aes(fill = elev), colour = NA)
```

Looks like we don't have elevation data for the whole region. 
This can be confirmed by checking the online [LidarBC map](https://governmentofbc.maps.arcgis.com/apps/MapSeries/index.html?appid=d06b37979b0c4709b7fcf2a1ed458e03)

Let's take a look our our options using TRIM data.
```{r}
mill_trim <- dem_region(mill_sf, type = "trim")
```

Add to our plot to double check
```{r}
mill_trim_sf <- mill_trim |>
  st_as_sf(as_points = FALSE, merge = TRUE)         # Convert to polygons

g + geom_sf(data = mill_trim_sf, aes(fill = elev), colour = NA)
```

TRIM is at a coarser resolution, but covers our entire area. Let's use it instead.

Collect wells in this region with added elevation from TRIM.

```{r}
mill_wells <- mill_sf |>
  wells_subset() |>
  wells_elev(mill_trim)
```

Plot again to double check, see that we now elevation data for all wells.
```{r}
g +
  geom_sf(data = mill_wells, size = 1, aes(colour = elev)) +
  scale_color_viridis_c(na.value = "red")
```


Export data for Strater, Voxler, and ArcHydro
```{r}
wells_export(mill_wells, id = "mill", type = "strater")
wells_export(mill_wells, id = "mill", type = "voxler")
wells_export(mill_wells, id = "mill", type = "archydro")
```


#### Extra tools

```{r, message = FALSE}
library(dplyr)
library(readr)
```


Load cleaned data (will fetch if doesn't already exist)

```{r}
wells_lith <- data_read("lithology")
```

Explore the lithology standardization performed by bcaquiferdata

```{r}
lith_std <- wells_lith |>
  select(well_tag_number, contains("lith")) |>
  arrange(!is.na(lithology_category))
lith_std
```

Save it to peruse later
```{r}
write_csv(lith_std, "lith_categorization.csv")
```



```{r, include = FALSE}
unlink(c("lith_categorization.csv", 
         "clinton_strater_lith.csv", "clinton_strater_collars.csv", "clinton_strater_wls.csv", 
         "clinton_voxler.csv",
         "clinton_archydro_bh.csv", "clinton_archydro_hguid.csv", "clinton_archydro_well.csv",
         "mill_strater_lith.csv", "mill_strater_collars.csv", "mill_strater_wls.csv", 
         "mill_voxler.csv",
         "mill_archydro_bh.csv", "mill_archydro_hguid.csv", "mill_archydro_well.csv"))
```

